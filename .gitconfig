# personal details

[user]
	email = luhmann@users.noreply.github.com
	name = Jan Florian Dietrich
  signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJ+WCtF9rB+ZYclQ9nDilbhhGYtmPbmUJxws2vzMxXHO

[credential]
	helper = osxkeychain

[alias]
	# credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
	# diff: `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	# pull including all submodules
	ppl = !"git pull; git submodule foreach git pull origin master"
	# undo push
	undopush = push --force-with-lease origin HEAD^:master
	# show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v
  # Alias the preferred operation for force push to not use regular force accidentally
  force-push-with-lease = push --force-with-lease
  # Stash but include unstaged files
  stash-unstaged = stash -k -u
  # reset current branch to the version on origin
  reset-origin = !"git fetch origin; git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)"
  dft = difftool
  dlog = "!f() { GIT_EXTERNAL_DIFF=difft git log -p --ext-diff $@; }; f"
  search-msg = "log --all --grep -i"

[apply]
	# detect whitespace errors when applying a patch
	whitespace = warn
	editor = vim

[core]
	excludesfile = ~/.gitignore
	# treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
	whitespace = space-before-tab,indent-with-non-tab,trailing-space

[color]
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow
	frag = white
	old = red
	new = green
	plain = white dim
[color "status"]
	added = green
	changed = blue
	untracked = red

# always use `origin` as the default remote on the `master` branch
[branch "master"]
	remote = origin
	merge = refs/heads/master

[branch "main"]
	remote = origin
	merge = refs/heads/main

[remote "origin"]
	push = HEAD

# proxy configuration
#[https]
#	proxy = http://proxy.example.org:8080
#[http]
# 	proxy = http://proxy.example.org:8080

; [pager]
;   difftool = true
;   show = diff-so-fancy | less --tabs=1,5 -RFX
[init]
  defaultBranch = main
[push]
	default = current
[difftool "difftastic"]
  cmd = difft "$LOCAL" "$REMOTE"
[difftool]
	prompt = false
[mergetool]
	prompt = false
; [diff]
;   external = difft
;   tool = difftastic
[pull]
	rebase = true
; [merge]
;   # use zdiff3 for conflict resolution
;   conflictstyle = zdiff3
; 	# include summaries of merged commits in newly created merge commit messages
;   log = true
[fetch]
  prune = true
[rebase]
  autostash = true
  updateRefs = true
[rerere]
  enabled = true
# [commit]
  # gpgsign = true
[gpg]
  format = ssh
[log]
  date = iso

[url "ssh://git@umg-github/umg/"]
  insteadOf = git@github.com:umg/

[includeIf "gitdir:/Users/jfd/dev/dg/"]
  path = /Users/jfd/dev/dg/.gitconfig
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
